variables:
  ### Versions
  ALPINE_TAG: "latest"
  TOFU_VERSION: "1.7.3"
  RCLONE_VERSION: "1.67.0"
  ### Clone Options
  GIT_SUBMODULE_STRATEGY: "recursive"
  GIT_SUBMODULE_FORCE_HTTPS: "true"
  GIT_SUBMODULE_DEPTH: "1"
  

stages:
  - download_binaries
  - build_image

download_tofu:
  stage: download_binaries
  image: alpine:${ALPINE_TAG}
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - when: manual
  script:
    - echo "--------" ; echo "Desired tofu Version -- ${TOFU_VERSION}" ; echo "--------"
    - "[ -f tofu ] && echo '-------- using cache :) --------' && exit"
    - wget "https://github.com/opentofu/opentofu/releases/download/v${TOFU_VERSION}/tofu_${TOFU_VERSION}_linux_amd64.zip"
    - unzip "tofu_${TOFU_VERSION}_linux_amd64.zip" tofu
  cache:
    key: "tofu-${TOFU_VERSION}"
    paths:
      - "tofu"
  artifacts:
    paths:
      - "tofu"

download_rclone:
  stage: download_binaries
  image: alpine:${ALPINE_TAG}
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - when: manual
  script:
    - echo "--------" ; echo "Desired rclone Version -- ${RCLONE_VERSION}" ; echo "--------"
    - "[ -f rclone ] && echo '-------- using cache :) --------' && exit"
    - wget "https://github.com/rclone/rclone/releases/download/v${RCLONE_VERSION}/rclone-v${RCLONE_VERSION}-linux-amd64.zip"
    - unzip -j "rclone-v${RCLONE_VERSION}-linux-amd64.zip" "rclone-v${RCLONE_VERSION}-linux-amd64/rclone"
  cache:
    key: "rclone-${RCLONE_VERSION}"
    paths:
      - "rclone"
  artifacts:
    paths:
      - "rclone"

build_image:
  stage: build_image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - when: manual
  dependencies:
    - download_tofu
    - download_rclone
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"},\"${HARBOR_HOST}\":{\"username\":\"${HARBOR_USERNAME}\",\"password\":\"${HARBOR_PASSWORD}\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context     "${CI_PROJECT_DIR}"
      --dockerfile  "${CI_PROJECT_DIR}/Dockerfile.kaniko"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
      --destination "${HARBOR_HOST}/${HARBOR_PROJECT}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}"
      --build-arg   "ALPINE_TAG=${ALPINE_TAG}"
